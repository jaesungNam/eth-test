{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to `approve`"
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `value` tokens are moved from one account to another"
				}
			},
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"returns": {
						"_0": "the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`"
					}
				},
				"approve(address,uint256)": {
					"returns": {
						"_0": "true if the approval succeeded"
					}
				},
				"balanceOf(address)": {
					"params": {
						"account": "the address to query the balance of"
					},
					"returns": {
						"_0": "the amount owned by `account`"
					}
				},
				"totalSupply()": {
					"returns": {
						"_0": "the total amount of tokens in existence"
					}
				},
				"transfer(address,uint256)": {
					"returns": {
						"_0": "true if the transfer succeeded"
					}
				},
				"transferFrom(address,address,uint256)": {
					"returns": {
						"_0": "true if the transfer succeeded"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"approve(address,uint256)": {
					"notice": "Approves `spender` to spend `amount` on behalf of the caller"
				},
				"transfer(address,uint256)": {
					"notice": "Transfers `amount` tokens to `to`"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Moves `amount` tokens from `from` to `to` using the allowance mechanism"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ERC20.sol": "ERC20"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC20.sol": {
			"keccak256": "0x691b72c00fa748aeed985793127820547075261cba699148cedc8b1f32386418",
			"license": "MIT",
			"urls": [
				"bzz-raw://76684adb4f215d5e409e221f41462ba9fc796f7b9455087676f2d48f3fcb2129",
				"dweb:/ipfs/Qmd8pGzcHnD4dcuWkhFa1TfgJKMVaZQYv64w273rJB6pDM"
			]
		}
	},
	"version": 1
}